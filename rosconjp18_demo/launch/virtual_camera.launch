<launch>

    <node name="insta360_driver" pkg="usb_cam" type="usb_cam_node" output="screen">
        <param name="video_device" value="/dev/video0"/>
        <param name="image_width" value="3008"/>
        <param name="image_height" value="1504"/>
        <param name="camera_name" value="insta360"/>
    </node>

    <node name="insta360_spritter" pkg="nodelet" type="nodelet"
          args="standalone image_reprojection_plugins/DualFisheyeSplitter node" output="screen">
        <remap from="image" to="insta360/image"/>
        <remap from="left/image" to="insta360/front/image"/>
        <remap from="right/image" to="insta360/back/image"/>
        <rosparam ns="left">
            frame_id: insta360/front
            camera_name: insta360_front
            camera_info_url: package://rosconjp18_demo/camera_info/insta360_front.yml
        </rosparam>
        <rosparam ns="right">
            frame_id: insta360/back
            camera_name: insta360_back
            camera_info_url: package://rosconjp18_demo/camera_info/insta360_back.yml
        </rosparam>
    </node>

    <node name="insta360_air_front_to_back" pkg="tf" type="static_transform_publisher"
          args="0 0 -0.01 -0.07 3.1415 -0.03 insta360/front insta360/back 100" output="screen"/>

    <node name="sphere_surface_publisher" pkg="image_reprojection_plugins" type="static_sphere_publisher"
          output="screen">
        <remap from="sphere" to="sphere_surface"/>
        <rosparam>
            frame_id: pinhole_camera
            center: [0., 0., 0.]
            radius: 1.
        </rosparam>
    </node>

    <node name="bno055_driver" pkg="bno055_usb_stick" type="bno055_usb_stick_node" output="screen">
        <param name="port" value="/dev/ttyACM0"/>
        <param name="publish_tf" value="true"/>
        <param name="tf_frame_id" value="insta360/front"/>
        <param name="tf_child_frame_id" value="pinhole_camera"/>
    </node>

    <node name="pinhole_camera_driver" pkg="nodelet" type="nodelet" 
          args="standalone image_reprojection/ImageReprojection" output="screen">
        <remap from="src_image0" to="insta360_air/front/image"/>
        <rosparam ns="src_camera0">
            model: image_reprojection_plugins/FisheyeCameraModel
            fov: 3.1415
            image_transport: compressed
        </rosparam>

        <remap from="src_image1" to="insta360_air/back/image"/>
        <rosparam ns="src_camera1">
            model: image_reprojection_plugins/FisheyeCameraModel
            fov: 3.1415
            image_transport: compressed
        </rosparam>

        <remap from="surface" to="sphere_surface"/>
        <rosparam ns="surface">
            model: image_reprojection_plugins/PlaneSurfaceModel
        </rosparam>

        <remap from="dst_image" to="pinhole_camera/image"/>
        <rosparam ns="dst_camera" subst_value="true">
            model: image_reprojection_plugins/PinholeCameraModel
            info_file: $(find image_reprojection_example)/camera_info/pinhole_camera.yml
        </rosparam>

        <rosparam ns="map_update">
            background: true
            frequency: 10
            binning_x: 16
            binning_y: 16
        </rosparam>
    </node>

    <node name="image_viewer" pkg="rqt_gui" type="rqt_gui"
          args="--perspective-file $(find rosconjp18_demo)/rqt/image_viewer.perspective" output="screen">
    </node>

</launch>